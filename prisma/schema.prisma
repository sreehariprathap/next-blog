// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        String     @default(cuid()) @id
  title     String
  content   String?
  published Boolean @default(false)
  author    User?   @relation(fields: [authorId], references: [id])
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  authorId  String?
  imageUrl String?
  heartCount Int? @default(0)
  comments Comment[]
  tags Int[]

  @@map(name: "posts")

}

model User {
  id            String       @default(cuid()) @id
  name          String?
  email         String?   @unique
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  imageUrl String?
  backGroundImageUrl String?

  githubUrl String?
  linkedinUrl String?
  websiteUrl String?

  posts         Post[]
  comments Comment[]
  @@map(name: "users")
}

model Comment {
   id            String       @default(cuid()) @id
   authorId  String?
   postId  String?
   author    User?   @relation(fields: [authorId], references: [id])
   post Post? @relation(fields: [postId], references: [id])
   createdAt     DateTime  @default(now()) @map(name: "created_at")
  @@map(name: "comments")

}
model Tag {
  id Int  @id @default(autoincrement())
  name String?
  postId String[]
}

model Bookmark {
  id Int  @id @default(autoincrement())
  authorId  String?
  postId  String?
  //  author    User?   @relation(fields: [authorId], references: [id])
  //  post Post? @relation(fields: [postId], references: [id])
}
